---
import Layout from './Layout.astro';
import type { CollectionEntry } from 'astro:content';

type Props = {
  post: CollectionEntry<'portfolio'>;
};

const { post } = Astro.props;
const { title, description, publishDate, image, client, country, industry, services, author } = post.data;
---

<Layout title={title} description={description}>
  <!-- Hero Section with Title and Image -->
  <div class="w-full">
    <!-- Title Section -->
    <div class="max-w-6xl mx-auto px-4 py-8">
      <div class="mb-6">
        <div class="flex items-center gap-3 mb-4">
          <span class="px-3 py-1.5 bg-accent-light/10 dark:bg-accent-dark/10 text-accent-light dark:text-accent-dark rounded-full font-medium text-sm">
            {industry}
          </span>
          <span class="text-gray-500 dark:text-gray-400">•</span>
          <time class="text-gray-600 dark:text-gray-400 text-sm">
            {publishDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
        </div>
        
        <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold mb-4 leading-tight">
          {title}
        </h1>
        
        <p class="text-lg sm:text-xl text-gray-600 dark:text-gray-400 leading-relaxed max-w-4xl">
          {description}
        </p>
      </div>
    </div>

    <!-- Full Width Image -->
    {image && (
      <div class="w-full mb-12">
        <img
          src={image.src}
          alt={image.alt}
          class="w-full h-[40vh] sm:h-[50vh] lg:h-[60vh] object-cover"
        />
      </div>
    )}
  </div>

  <!-- Two Column Layout -->
  <div class="max-w-6xl mx-auto px-4">
    <div class="grid grid-cols-1 lg:grid-cols-10 gap-8 lg:gap-12">
      
      <!-- Left Sidebar (30%) -->
      <aside class="lg:col-span-3 order-2 lg:order-1">
        <div 
          class="sidebar-content space-y-6"
          id="sidebar"
        >
          <!-- Project Tags -->
          <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-6">
            <h3 class="font-bold text-lg mb-4 text-gray-900 dark:text-gray-100">Services</h3>
            <div class="flex flex-wrap gap-2">
              {services.map((service) => (
                <a
                  href={`/portfolio#${service}`}
                  class="inline-block px-3 py-1.5 text-sm font-medium rounded-full bg-accent-light/10 dark:bg-accent-dark/10 text-accent-light dark:text-accent-dark hover:bg-accent-light/20 dark:hover:bg-accent-dark/20 transition-all duration-200 hover:scale-105"
                >
                  {service}
                </a>
              ))}
            </div>
          </div>

          <!-- Project Metadata -->
          <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-6">
            <h3 class="font-bold text-lg mb-4 text-gray-900 dark:text-gray-100">Project Details</h3>
            <div class="space-y-4">
              <div>
                <h4 class="font-semibold text-sm text-gray-600 dark:text-gray-400 mb-1">CLIENT</h4>
                <p class="font-medium text-gray-900 dark:text-gray-100">{client}</p>
              </div>
              <div>
                <h4 class="font-semibold text-sm text-gray-600 dark:text-gray-400 mb-1">INDUSTRY</h4>
                <p class="font-medium text-gray-900 dark:text-gray-100">{industry}</p>
              </div>
              <div>
                <h4 class="font-semibold text-sm text-gray-600 dark:text-gray-400 mb-1">LOCATION</h4>
                <p class="font-medium text-gray-900 dark:text-gray-100">{country}</p>
              </div>
              <div>
                <h4 class="font-semibold text-sm text-gray-600 dark:text-gray-400 mb-1">COMPLETED</h4>
                <p class="font-medium text-gray-900 dark:text-gray-100">
                  {publishDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long'
                  })}
                </p>
              </div>
            </div>
          </div>

          <!-- Navigation Links -->
          <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-6">
            <h3 class="font-bold text-lg mb-4 text-gray-900 dark:text-gray-100">Navigation</h3>
            <div class="space-y-3">
              <a
                href="/portfolio"
                class="flex items-center gap-2 text-accent-light dark:text-accent-dark hover:underline transition-colors"
              >
                <span>←</span> Back to Portfolio
              </a>
              <a
                href="/about"
                class="flex items-center gap-2 text-gray-600 dark:text-gray-400 hover:text-accent-light dark:hover:text-accent-dark transition-colors"
              >
                About Me <span>→</span>
              </a>
            </div>
          </div>

          <!-- Author Info -->
          <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-6">
            <h3 class="font-bold text-lg mb-4 text-gray-900 dark:text-gray-100">Project by</h3>
            <div class="flex items-center gap-3">
              <img
                src="https://avatars.githubusercontent.com/u/890270?v=4"
                alt={author}
                class="w-12 h-12 rounded-full object-cover"
              />
              <div>
                <p class="font-semibold text-gray-900 dark:text-gray-100">{author}</p>
                <p class="text-sm text-gray-600 dark:text-gray-400">Full-Stack Developer</p>
              </div>
            </div>
          </div>
        </div>
      </aside>

      <!-- Right Content (70%) -->
      <main class="lg:col-span-7 order-1 lg:order-2">
        <div class="prose dark:prose-invert max-w-none prose-lg">
          <slot />
        </div>
      </main>
    </div>
  </div>
</Layout>

<style>
  /* Sticky sidebar with bounce animation */
  @media (min-width: 1024px) {
    .sidebar-content {
      position: sticky;
      top: 2rem;
      animation: bounceIn 0.6s ease-out;
    }
  }

  @keyframes bounceIn {
    0% {
      transform: translateY(-20px);
      opacity: 0;
    }
    60% {
      transform: translateY(5px);
      opacity: 0.8;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }

  /* Enhanced prose styles */
  .prose {
    @apply text-gray-900 dark:text-gray-100;
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4 {
    @apply font-bold mb-6 mt-8 text-gray-900 dark:text-gray-100;
  }
  
  .prose h1 { @apply text-3xl sm:text-4xl; }
  .prose h2 { @apply text-2xl sm:text-3xl; }
  .prose h3 { @apply text-xl sm:text-2xl; }
  .prose h4 { @apply text-lg sm:text-xl; }
  
  .prose p { 
    @apply mb-6 leading-relaxed text-gray-700 dark:text-gray-300; 
  }
  
  .prose ul, .prose ol { 
    @apply mb-6 ml-6; 
  }
  
  .prose li { 
    @apply mb-3 leading-relaxed; 
  }
  
  .prose code {
    @apply px-2 py-1 rounded bg-gray-100 dark:bg-gray-800 text-sm font-mono;
  }
  
  .prose pre {
    @apply p-6 rounded-lg bg-gray-100 dark:bg-gray-800 overflow-x-auto mb-6;
  }
  
  .prose pre code {
    @apply bg-transparent p-0;
  }
  
  .prose a {
    @apply text-accent-light dark:text-accent-dark hover:underline transition-colors;
  }
  
  .prose img {
    @apply rounded-lg shadow-lg;
  }

  .prose blockquote {
    @apply border-l-4 border-accent-light dark:border-accent-dark pl-6 italic text-gray-600 dark:text-gray-400;
  }
</style>

<script>
  // Enhanced sticky behavior with view transitions
  function initializeStickyBehavior() {
    const sidebar = document.getElementById('sidebar');
    if (!sidebar) return;

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            sidebar.style.animation = 'bounceIn 0.6s ease-out';
          }
        });
      },
      { threshold: 0.1 }
    );

    observer.observe(sidebar);
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeStickyBehavior);
  } else {
    initializeStickyBehavior();
  }
</script>