---
import '../styles/pages/home.css';
import Layout from '../layouts/Layout.astro';
import HeroSection from '../components/HeroSection.astro';
import Accordion from '../components/Accordion.astro';
import Footer from '../components/Footer.astro';
import About from '../components/About.astro';

import { getCollection } from 'astro:content';
import ProjectGrid from '../components/ProjectGrid.jsx';

import {Image} from 'astro:assets';
import dot from '../assets/dot.png';

const portfolioPosts = await getCollection('portfolio');
const sortedPortfolio = portfolioPosts.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()).slice(0, 6);
---

<Layout title="Isaac Fernández - UX / UI Designer Portafolio">
  <!-- Hero Section -->
  <HeroSection 
    title="I design websites that captivate, convert and elevate your brand."
    showProfile={true}
    showCTA={true}
    ctaText="¡Hablemos!"
    ctaHref="/about"
  />

  <!-- Projects Section -->
  <section class="py-6 home-background pb-20 w-full max-w-full">
    <div class="flex flex-col mx-16">
      <!-- Section Header -->
      <div class="mb-4 w-full max-w-full">
        <h2 class="text-3xl lg:text-4xl text-left font-bold text-gray-900 dark:text-white mb-4 motion-preset-slide-left motion-delay-[1600ms]">
          My projects
        </h2>
      </div>
      <ProjectGrid projects={sortedPortfolio} client:load/>
    </div>
    <Accordion class="mt-10" />
    <About />
  </section>

  <Footer/>
</Layout>

<style>
  .filter-btn.active { background-color: white !important; color: #1f2937 !important; border-color: white !important; }
  .filter-btn:not(.active) { background-color: transparent; color: #E0E0E0; border-color: rgba(255, 255, 255, 0.3); }
  .project-item { transition: transform 0.3s ease; }
  .project-item:hover { transform: translateY(-5px); }
</style>

<script>
  // Filter functionality
  function initializeFilters() {
    const filterBtns = document.querySelectorAll('.filter-btn');
    const projectItems = document.querySelectorAll('.project-item');

    filterBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        const category = btn.getAttribute('data-category') || 'all';
        
        // Remove active class from all buttons
        filterBtns.forEach(b => {
          b.classList.remove('active');
        });

        // Add active class to clicked button
        btn.classList.add('active');

        // Filter projects based on category
        projectItems.forEach(item => {
          if (category === 'all') {
            (item as HTMLElement).style.display = 'block';
          } else {
            const itemCategories = JSON.parse(item.getAttribute('data-categories') || '[]');
            if (itemCategories.includes(category)) {
              (item as HTMLElement).style.display = 'block';
            } else {
              (item as HTMLElement).style.display = 'none';
            }
          }
        });
      });
    });
  }

  // Mobile menu functionality
  function initializeMobileMenu() {
    const mobileMenuBtn = document.getElementById('mobileMenuBtn');
    const mobileMenu = document.getElementById('mobileMenu');

    mobileMenuBtn?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('hidden');
    });
  }

  // Initialize all functionality when DOM is ready
  function initializeAll() {
    initializeFilters();
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeAll);
  } else {
    initializeAll();
  }

  // Re-initialize after view transitions
  document.addEventListener('astro:after-swap', initializeAll);

  import { Observer } from 'tailwindcss-intersect';
 
Observer.start();
</script>